package bean;

import java.util.ArrayList;

public class TradeSystemBean {

	private ArrayList<OrderBean> saleOrders;
	private ArrayList<OrderBean> buyOrders;
	private ArrayList<String> allSecurities;
	private ArrayList<ClosedOrderBean> closedOrders;

	public TradeSystemBean() {
		saleOrders = new ArrayList<OrderBean>();
		buyOrders = new ArrayList<OrderBean>();
		allSecurities = new ArrayList<String>();
		closedOrders = new ArrayList<ClosedOrderBean>();
	}

	public void addSecurity(String security) {
		allSecurities.add(security);
	}

	public boolean securityExists(String security) {
		return allSecurities.contains(security);
	}

	public boolean addSaleOrder(OrderBean order) {
		if (saleOrders.contains(order)) {
			return false;
		}
		saleOrders.add(order);
		return true;
	}

	public boolean addBuyOrder(OrderBean order) {
		if (saleOrders.contains(order)) {
			return false;
		}
		buyOrders.add(order);
		return true;
	}

	public boolean closeDeal(OrderBean buyOrder, OrderBean sellOrder) {
		if (buyOrder.getPrice() > sellOrder.getPrice()) {
			ClosedOrderBean closedOrder = new ClosedOrderBean(buyOrder,
					sellOrder);

			// Adjust the buy/sell order size or remove if empty
			if (closedOrder.getAmount() >= buyOrder.getAmount()) {
				buyOrders.remove(buyOrder);
			} else {
				buyOrder.setAmount(buyOrder.getAmount()
						- closedOrder.getAmount());
			}

			if (closedOrder.getAmount() >= sellOrder.getAmount()) {
				saleOrders.remove(sellOrder);
			} else {
				sellOrder.setAmount(sellOrder.getAmount()
						- closedOrder.getAmount());
			}
			
			closedOrders.add(closedOrder);
			
			return true;
		}

		return false;
	}
	
	public ArrayList<ClosedOrderBean> getClosedOrders(){
		return closedOrders;
	}
}

